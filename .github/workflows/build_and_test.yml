name: Build and test ERT and docs

on:
 push:
   branches:
     - main
     - 'version-**'
   tags: "*"
 pull_request:

env:
  ERT_SHOW_BACKTRACE: 1
  ECL_SKIP_SIGNAL: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
    uses: ./.github/workflows/build-wheels-linux.yml
    with:
      python-version: ${{ matrix.python-version }}

  build-mac-for-tags:
    if: github.ref_type == 'tag' # only build all variants for tags
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
        # https://github.com/actions/runner-images?tab=readme-ov-file#available-images
        os: [ 'macos-13', 'macos-14', 'macos-14-large']
        exclude:
          - os: 'macos-14'
            python-version: '3.8'
          - os: 'macos-14'
            python-version: '3.9'
          - os: 'macos-14'
            python-version: '3.10'
          - os: 'macos-14-large'
            python-version: '3.8'
          - os: 'macos-14-large'
            python-version: '3.9'
          - os: 'macos-14-large'
            python-version: '3.10'
          - os: 'macos-13'
            python-version: '3.11'
          - os: 'macos-13'
            python-version: '3.12'

    uses: ./.github/workflows/build-wheels-macos.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}

  build-mac:
    if: github.ref_type != 'tag' # one combination when not tag
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.12' ]
        os: [ 'macos-latest' ]
    uses: ./.github/workflows/build-wheels-macos.yml
    with:
      python-version: ${{ matrix.python-version }}
      os: ${{ matrix.os }}

  test-linux:
    needs: [build-linux]
    strategy:
      fail-fast: false
      matrix:
        test-type: [ 'integration-tests', 'unit-tests', 'gui-test' ]
        python-version: [ '3.8', '3.11', '3.12' ]
        os: [ ubuntu-latest ]
    uses: ./.github/workflows/test_ert.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test-type: ${{ matrix.test-type }}

  test-slurm:
    needs: [build-linux]
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.8', '3.11', '3.12' ]
    uses: ./.github/workflows/test_ert_with_slurm.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}

  test-mac-for-tags:
    if: github.ref_type == 'tag' # only test all variants for tags
    needs: [build-mac-for-tags]
    strategy:
      fail-fast: false
      matrix:
        test-type: [ 'integration-tests', 'unit-tests', 'gui-test' ]
        python-version: [ '3.8', '3.12' ]
        os: [ 'macos-13', 'macos-14', 'macos-14-large']
        exclude:
          - os: 'macos-14'
            python-version: '3.8'
          - os: 'macos-14-large'
            python-version: '3.8'
          - os: 'macos-13'
            python-version: '3.12'

    uses: ./.github/workflows/test_ert.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test-type: ${{ matrix.test-type }}

  test-mac:
    if: github.ref_type != 'tag' # one combination when not tag
    needs: [build-mac]
    strategy:
      fail-fast: false
      matrix:
        test-type: [ 'integration-tests', 'unit-tests', 'gui-test' ]
        python-version: [ '3.12' ]
        os: [ 'macos-latest' ]
    uses: ./.github/workflows/test_ert.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test-type: ${{ matrix.test-type }}

  docs-ert:
    name: Test ert docs
    needs: [build-linux]
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: './.github/actions/install_dependencies'
      with:
        os: ${{ matrix.os }}

    - name: Install pandoc
      run: |
        sudo apt install pandoc

    - uses: actions/setup-python@v5
      id: setup_python
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: |
          pyproject.toml

    - name: Get wheels
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.os }} Python ${{ matrix.python-version }} wheel

    - name: Install wheel
      run: |
        find . -name "*.whl" -exec pip install "{}[dev]" \;

    - name: Make test directory
      run: |
        mkdir tmp_tests
        mv tests tmp_tests/tests
        mv test-data tmp_tests/test-data
        mkdir tmp_tests/.git

    - name: Test docs
      run: |
        sphinx-build -n -v -E -W ./docs ./tmp/ert_docs

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [test-linux, test-mac-for-tags, docs-ert]
    permissions:
      id-token: write

    # If this is a tagged release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Get wheels
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move to dist/
        run: |
          mkdir dist
          find artifacts -name "*.whl" -exec mv '{}' dist/ \;

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11

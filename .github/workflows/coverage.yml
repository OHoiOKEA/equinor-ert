name: coverage

on: [push]

env:
  ERT_SHOW_BACKTRACE: 1
  ECL_SKIP_SIGNAL: 1

jobs:
  python-test-coverage:
    name: Python Coverage
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system-under-test: ['res', 'ert', 'libres']
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: './.github/actions/install_dependencies'
      with:
        os: ubuntu-latest

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'


    - name: Install pip package with dependencies
      if: matrix.system-under-test == 'ert' || matrix.system-under-test == 'res'
      run: |
        pip install .
        pip install -r dev-requirements.txt

    - name: Run ert tests
      if: matrix.system-under-test == 'ert'
      env:
        DISPLAY: ':99.0'
      run: |
        ci/github/start_herbstluftwm.sh &
        sleep 5
        # We run the tests from the test directory as pytest-cov (at least as
        # of 3.0.0) will create an incorrect report when a directory matches
        # the package name
        cd tests
        pytest ert_tests --cov=ert --cov=ert3 --cov=ert_data --cov=ert_gui --cov=ert_shared --cov=ert_logging --cov=res --cov-report=xml:cov.xml

    - name: Run res tests
      if: matrix.system-under-test == 'res'
      run: |
        cd tests
        pytest libres_tests --cov=res --cov-report=xml:cov.xml

    - name: Run libres tests
      if: matrix.system-under-test == 'libres'
      run: |
        sudo apt-get install -y valgrind
        python3 -m pip install conan
        git clone https://github.com/equinor/libecl
        mkdir libecl/build
        cmake -S libecl -B libecl/build -DCMAKE_BUILD_TYPE=RelWithDebInfo
        sudo cmake --build libecl/build --target install
        sudo rm -rf libecl
        mkdir cmake-build
        cmake -S libres -B cmake-build -DBUILD_TESTS=ON -DCOVERAGE=ON
        cmake --build cmake-build
        pushd cmake-build
        export PATH=$PWD/bin:$PATH
        ctest --output-on-failure
        popd
        python3 -m pip install gcovr
        gcovr -r libres/ --exclude-directories ".*tests" cmake-build/ --xml -o tests/cov.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: tests/cov.xml

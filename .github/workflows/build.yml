name: Python package

on:
 push:
   branches:
     - main
     - 'version-**'
   tags: "*"
 pull_request:

env:
  ERT_SHOW_BACKTRACE: 1
  ECL_SKIP_SIGNAL: 1

jobs:
  build-wheels:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        os: [macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: './.github/actions/install_dependencies'
      with:
        os: ${{ matrix.os }}

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build Linux Wheel
      uses: docker://quay.io/pypa/manylinux2014_x86_64
      with:
        entrypoint: /github/workspace/ci/github/build_linux_wheel.sh
        args: ${{ matrix.python-version }}
      if: matrix.os == 'ubuntu-latest'

    - name: Build macOS Wheel
      run: pip wheel . --no-deps -w dist
      if: matrix.os == 'macos-latest'

    - name: Upload wheel as artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }} Python ${{ matrix.python-version }} wheel
        path: dist/*

  tests-ert:
    name: Run ert tests
    needs: [build-wheels]
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        os: [macos-latest]
        test-type: ['integration-tests']
        # Excluded to keep build times down on Github actions
        exclude:
          - os: macos-latest
            python-version: '3.9'
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: './.github/actions/install_dependencies'
      with:
        os: ${{ matrix.os }}

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get wheels
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.os }} Python ${{ matrix.python-version }} wheel

    - name: Install wheel and test dependencies
      run: |
        find . -name "*.whl" -exec pip install {} \;
        pip install -r dev-requirements.txt

    - name: Test MacOS
      if: matrix.os == 'macos-latest' && matrix.test-type == 'integration-tests'
      run: |
        pushd tests
        pytest ert_tests/cli/test_integration_cli.py::test_experiment_server_ensemble_experiment
        pytest ert_tests/cli/test_integration_cli.py::test_experiment_server_ensemble_experiment
        pytest ert_tests/cli/test_integration_cli.py::test_experiment_server_ensemble_experiment
